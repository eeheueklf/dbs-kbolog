{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\dbs-kbolog\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Teampage\\\\Teampage.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Teampage.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/_Layout/Footer\";\nimport Calendar from \"react-calendar\";\nimport \"./calendar.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Teampage() {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\n  const [gameData, setGameData] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]);\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  useEffect(() => {\n    fetch(\"/api/my\").then(res => res.json()).then(res => {\n      setTeam(res);\n    }).catch(err => {\n      console.error(\"API fetch error:\", err); // 에러 처리\n    });\n  }, [team.rootTeamSponsor]);\n  useEffect(() => {\n    const selectedDate = new Date();\n    const year = selectedDate.getFullYear();\n    const month = selectedDate.getMonth();\n    const startOfMonth = formatDate(new Date(year, month, 1));\n    const endOfMonth = formatDate(new Date(year, month + 1, 0));\n    fetch(`/api/game/team`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        teamId: team.rootTeamId,\n        start: startOfMonth,\n        end: endOfMonth\n      })\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setGameData(data);\n      } else {\n        setGameData([]);\n      }\n    }).catch(err => console.error(\"Failed to fetch game data:\", err));\n  }, [selectedDate, team.id]);\n  const gamesByDate = gameData.reduce((acc, game) => {\n    const gameDate = formatDate(game.gameDate); // Assuming the game date is in `game.date`\n    if (!acc[gameDate]) acc[gameDate] = [];\n    acc[gameDate].push(game);\n    return acc;\n  }, {});\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const formattedDate = formatDate(date);\n    const gamesOnDate = gamesByDate[formattedDate];\n    return gamesOnDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameInfo,\n      children: gamesOnDate.map((game, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.game,\n          children: [game.awayTeamSponsor, \" vs \", game.homeTeamSponsor]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.default,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cropping\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: team.rootTeamName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.title,\n          children: [team.rootTeamName, \" \\uACBD\\uAE30 \\uC77C\\uC815\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.calendarContainer,\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setSelectedDate,\n            value: selectedDate,\n            tileContent: tileContent,\n            formatDay: (locale, date) => date.toLocaleString(\"en\", {\n              day: \"numeric\"\n            }),\n            calendarType: \"gregory\",\n            locale: \"en\",\n            showNavigation: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC751\\uC6D0\\uD558\\uB294 \\uD300\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_s(Teampage, \"dRcLU+0RG5LRBO/ScOAp3MlwIFA=\");\n_c = Teampage;\nvar _c;\n$RefreshReg$(_c, \"Teampage\");","map":{"version":3,"names":["styles","React","useEffect","useState","Footer","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","Teampage","_s","team","setTeam","backgroundColor","setBackgroundColor","gameData","setGameData","selectedDate","setSelectedDate","Date","gamesForSelectedDate","setGamesForSelectedDate","formatDate","date","d","year","getFullYear","month","String","getMonth","padStart","day","getDate","fetch","then","res","json","catch","err","console","error","rootTeamSponsor","startOfMonth","endOfMonth","method","headers","body","JSON","stringify","teamId","rootTeamId","start","end","data","Array","isArray","id","gamesByDate","reduce","acc","game","gameDate","push","tileContent","view","formattedDate","gamesOnDate","className","gameInfo","children","map","index","awayTeamSponsor","homeTeamSponsor","fileName","_jsxFileName","lineNumber","columnNumber","default","cropping","inner","rootTeamName","title","calendarContainer","onChange","value","formatDay","locale","toLocaleString","calendarType","showNavigation","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/dbs-kbolog/src/main/frontend/src/page/Teampage/Teampage.js"],"sourcesContent":["import styles from \"./Teampage.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Footer from \"../../components/_Layout/Footer\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"./calendar.css\";\r\n\r\n\r\nexport default function Teampage() {\r\n    const [team, setTeam] = useState([]);\r\n    const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\r\n    const [gameData, setGameData] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]);\r\n\r\n    const formatDate = (date) => {\r\n        const d = new Date(date);\r\n        const year = d.getFullYear();\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/my\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setTeam(res);\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API fetch error:\", err); // 에러 처리\r\n            });\r\n\r\n    }, [team.rootTeamSponsor]);\r\n\r\n    useEffect(() => {\r\n        const selectedDate = new Date();\r\n        const year = selectedDate.getFullYear();\r\n        const month = selectedDate.getMonth();\r\n        const startOfMonth = formatDate(new Date(year, month, 1));\r\n        const endOfMonth = formatDate(new Date(year, month + 1, 0));\r\n        fetch(`/api/game/team`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                teamId: team.rootTeamId,\r\n                start: startOfMonth,\r\n                end: endOfMonth,\r\n            })})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Array.isArray(data)) {\r\n                    setGameData(data);\r\n                } else {\r\n                    setGameData([]);\r\n                }\r\n            })\r\n            .catch((err) => console.error(\"Failed to fetch game data:\", err));\r\n    }, [selectedDate, team.id]);\r\n\r\n    const gamesByDate = gameData.reduce((acc, game) => {\r\n        const gameDate = formatDate(game.gameDate); // Assuming the game date is in `game.date`\r\n        if (!acc[gameDate]) acc[gameDate] = [];\r\n        acc[gameDate].push(game);\r\n        return acc;\r\n    }, {});\r\n\r\n    const tileContent = ({ date, view }) => {\r\n        const formattedDate = formatDate(date);\r\n        const gamesOnDate = gamesByDate[formattedDate];\r\n\r\n        return gamesOnDate ? (\r\n            <div className={styles.gameInfo}>\r\n                {gamesOnDate.map((game, index) => {\r\n                    return (\r\n                        <div key={index} className={styles.game}>\r\n                            {game.awayTeamSponsor} vs {game.homeTeamSponsor}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.default}>\r\n            <div className={styles.cropping}></div>\r\n                <div className={styles.inner}>\r\n                    {team.rootTeamName ? (\r\n                        <>\r\n                            <div className={styles.title}>{team.rootTeamName} 경기 일정</div>\r\n                            <div className={styles.calendarContainer}>\r\n                                <Calendar\r\n                                    onChange={setSelectedDate}\r\n                                    value={selectedDate}\r\n                                    tileContent={tileContent}\r\n                                    formatDay={(locale, date) => date.toLocaleString(\"en\", { day: \"numeric\" })}\r\n                                    calendarType=\"gregory\"\r\n                                    locale=\"en\"\r\n                                    showNavigation={false}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <p>응원하는 팀이 없습니다</p>\r\n                    )}\r\n\r\n\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n            );\r\n            }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}