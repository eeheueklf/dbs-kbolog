{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\dbs-kbolog\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Teampage\\\\Teampage.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Teampage.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/_Layout/Footer\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teampage() {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\n  const [gameData, setGameData] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date()); // 달력에서 선택된 날짜\n  const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]); // 선택된 날짜의 경기 정보\n\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  useEffect(() => {\n    fetch(\"/api/my\").then(res => res.json()).then(res => {\n      setTeam(res.rootTeam);\n    }).catch(err => {\n      console.error(\"API fetch error:\", err); // 에러 처리\n    });\n    switch (team.sponsor) {\n      case \"기아\":\n        setBackgroundColor(\"#F73600\"); // 기아의 배경색\n        break;\n      case \"두산\":\n        setBackgroundColor(\"#131230\"); // 두산의 배경색\n        break;\n      case \"삼성\":\n        setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\n        break;\n      default:\n        setBackgroundColor(\"#f0f0f0\");\n      // 기본 배경색\n    }\n  }, [team.sponsor]);\n  useEffect(() => {\n    const selectedDate = new Date();\n    const year = selectedDate.getFullYear();\n    const month = selectedDate.getMonth(); // 월은 0부터 시작하므로 (예: 11월이면 10)\n    const startOfMonth = formatDate(new Date(year, month, 1));\n    const endOfMonth = formatDate(new Date(year, month + 1, 0)); // 다음 월의 0일은 이전 월의 마지막 날\n    console.log(team.teamId);\n    fetch(`/api/game/team`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        teamId: team.teamId,\n        start: startOfMonth,\n        end: endOfMonth\n      })\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setGameData(data);\n        console.log(data);\n      } else {\n        setGameData([]);\n      }\n    }).catch(err => console.error(\"Failed to fetch game data:\", err));\n  }, [selectedDate, team.teamId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.default,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cropping,\n      style: {\n        backgroundColor: backgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: [team.sponsor, \" \\uACBD\\uAE30 \\uC77C\\uC815\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarContainer,\n        children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Teampage, \"dRcLU+0RG5LRBO/ScOAp3MlwIFA=\");\n_c = Teampage;\nvar _c;\n$RefreshReg$(_c, \"Teampage\");","map":{"version":3,"names":["styles","React","useEffect","useState","Footer","Calendar","jsxDEV","_jsxDEV","Teampage","_s","team","setTeam","backgroundColor","setBackgroundColor","gameData","setGameData","selectedDate","setSelectedDate","Date","gamesForSelectedDate","setGamesForSelectedDate","formatDate","date","d","year","getFullYear","month","String","getMonth","padStart","day","getDate","fetch","then","res","json","rootTeam","catch","err","console","error","sponsor","startOfMonth","endOfMonth","log","teamId","method","headers","body","JSON","stringify","start","end","data","Array","isArray","className","default","children","cropping","style","fileName","_jsxFileName","lineNumber","columnNumber","inner","title","calendarContainer","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/dbs-kbolog/src/main/frontend/src/page/Teampage/Teampage.js"],"sourcesContent":["import styles from \"./Teampage.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Footer from \"../../components/_Layout/Footer\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nexport default function Teampage() {\r\n    const [team, setTeam] = useState([]);\r\n    const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\r\n\r\n    const [gameData, setGameData] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(new Date()); // 달력에서 선택된 날짜\r\n    const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]); // 선택된 날짜의 경기 정보\r\n\r\n    const formatDate = (date) => {\r\n        const d = new Date(date);\r\n        const year = d.getFullYear();\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/my\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setTeam(res.rootTeam)\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API fetch error:\", err); // 에러 처리\r\n            });\r\n\r\n        switch (team.sponsor) {\r\n            case \"기아\":\r\n                setBackgroundColor(\"#F73600\"); // 기아의 배경색\r\n                break;\r\n            case \"두산\":\r\n                setBackgroundColor(\"#131230\"); // 두산의 배경색\r\n                break;\r\n            case \"삼성\":\r\n                setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\r\n                break;\r\n            default:\r\n                setBackgroundColor(\"#f0f0f0\"); // 기본 배경색\r\n        }\r\n    }, [team.sponsor]);\r\n\r\n    useEffect(() => {\r\n        const selectedDate = new Date();\r\n        const year = selectedDate.getFullYear();\r\n        const month = selectedDate.getMonth(); // 월은 0부터 시작하므로 (예: 11월이면 10)\r\n        const startOfMonth = formatDate(new Date(year, month, 1));\r\n        const endOfMonth = formatDate(new Date(year, month + 1, 0)); // 다음 월의 0일은 이전 월의 마지막 날\r\n        console.log(team.teamId)\r\n        fetch(`/api/game/team`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                teamId: team.teamId,\r\n                start: startOfMonth,\r\n                end: endOfMonth,\r\n            })})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Array.isArray(data)) {\r\n                    setGameData(data);\r\n                    console.log(data);\r\n                } else {\r\n                    setGameData([]);\r\n                }\r\n            })\r\n            .catch((err) => console.error(\"Failed to fetch game data:\", err));\r\n    }, [selectedDate, team.teamId]);\r\n\r\n    return (\r\n        <div className={styles.default}>\r\n            <div className={styles.cropping}\r\n                 style={{backgroundColor: backgroundColor}}></div>\r\n                <div className={styles.inner}>\r\n                    <div className={styles.title}>{team.sponsor} 경기 일정</div>\r\n\r\n                    <div className={styles.calendarContainer}>\r\n                        <Calendar/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n            );\r\n            }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}