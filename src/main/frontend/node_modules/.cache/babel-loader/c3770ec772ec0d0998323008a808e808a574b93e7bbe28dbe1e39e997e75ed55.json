{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\dbs-kbolog\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Teampage\\\\Teampage.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Teampage.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/_Layout/Footer\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Teampage() {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\n  const [gameData, setGameData] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date()); // 달력에서 선택된 날짜\n  const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]); // 선택된 날짜의 경기 정보\n\n  useEffect(() => {\n    fetch(\"/api/my\").then(res => res.json()).then(res => {\n      setTeam(res.rootTeam);\n    }).catch(err => {\n      console.error(\"API fetch error:\", err); // 에러 처리\n    });\n    console.log(team);\n    switch (team.sponsor) {\n      case \"기아\":\n        setBackgroundColor(\"#F73600\"); // 기아의 배경색\n        break;\n      case \"두산\":\n        setBackgroundColor(\"#131230\"); // 두산의 배경색\n        break;\n      case \"삼성\":\n        setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\n        break;\n      default:\n        setBackgroundColor(\"#f0f0f0\");\n      // 기본 배경색\n    }\n  }, [team.sponsor]);\n  useEffect(() => {\n    fetch(`/api/game/${team.teamId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: formData.title,\n        content: formData.content,\n        gameId: formData.gameId,\n        // gameId를 함께 전송\n        location: formData.location\n      })\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setGameData(data); // 배열이면 그대로 상태에 저장\n      } else {\n        setGameData([]); // 배열이 아니면 빈 배열로 설정\n      } // 서버에서 받은 경기 데이터 저장\n    }).catch(err => console.error(\"Failed to fetch game data:\", err));\n  }, [selectedDate, team.teamId]);\n\n  // 날짜가 선택되었을 때 해당 날짜의 경기 정보를 필터링하여 저장\n  useEffect(() => {\n    const selectedDateString = selectedDate.toISOString().split(\"T\")[0]; // 선택된 날짜의 yyyy-mm-dd 형식\n    const gamesOnSelectedDate = gameData.filter(game => {\n      return game.gameDate === selectedDateString; // 경기가 선택된 날짜와 일치하는지 확인\n    });\n    setGamesForSelectedDate(gamesOnSelectedDate);\n  }, [selectedDate, gameData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.default,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cropping,\n      style: {\n        backgroundColor: backgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: [team.sponsor, \" \\uACBD\\uAE30 \\uC77C\\uC815\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarContainer,\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          onChange: setSelectedDate // 날짜 선택 핸들러\n          ,\n          value: selectedDate // 현재 선택된 날짜\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gameList,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedDate.toLocaleDateString(), \" \\uACBD\\uAE30\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), gamesForSelectedDate.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: gamesForSelectedDate.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [game.homeTeam.teamName, \" vs \", game.awayTeam.teamName, \" - \", game.gameDate]\n          }, game.gameId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC774\\uBC88 \\uB0A0\\uC9DC\\uC5D0\\uB294 \\uACBD\\uAE30\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Teampage, \"Mn9dRsFcUr7P91umr8NbUwPixtY=\");\n_c = Teampage;\nvar _c;\n$RefreshReg$(_c, \"Teampage\");","map":{"version":3,"names":["styles","React","useEffect","useState","Footer","Calendar","jsxDEV","_jsxDEV","Teampage","_s","team","setTeam","backgroundColor","setBackgroundColor","gameData","setGameData","selectedDate","setSelectedDate","Date","gamesForSelectedDate","setGamesForSelectedDate","fetch","then","res","json","rootTeam","catch","err","console","error","log","sponsor","teamId","method","headers","body","JSON","stringify","title","formData","content","gameId","location","data","Array","isArray","selectedDateString","toISOString","split","gamesOnSelectedDate","filter","game","gameDate","className","default","children","cropping","style","fileName","_jsxFileName","lineNumber","columnNumber","inner","calendarContainer","onChange","value","gameList","toLocaleDateString","length","map","homeTeam","teamName","awayTeam","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/dbs-kbolog/src/main/frontend/src/page/Teampage/Teampage.js"],"sourcesContent":["import styles from \"./Teampage.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Footer from \"../../components/_Layout/Footer\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nexport default function Teampage() {\r\n    const [team, setTeam] = useState([]);\r\n    const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\r\n\r\n    const [gameData, setGameData] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(new Date()); // 달력에서 선택된 날짜\r\n    const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]); // 선택된 날짜의 경기 정보\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/my\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setTeam(res.rootTeam)\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API fetch error:\", err); // 에러 처리\r\n            });\r\n        console.log(team)\r\n        switch (team.sponsor) {\r\n            case \"기아\":\r\n                setBackgroundColor(\"#F73600\"); // 기아의 배경색\r\n                break;\r\n            case \"두산\":\r\n                setBackgroundColor(\"#131230\"); // 두산의 배경색\r\n                break;\r\n            case \"삼성\":\r\n                setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\r\n                break;\r\n            default:\r\n                setBackgroundColor(\"#f0f0f0\"); // 기본 배경색\r\n        }\r\n    }, [team.sponsor]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`/api/game/${team.teamId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                title: formData.title,\r\n                content: formData.content,\r\n                gameId: formData.gameId,  // gameId를 함께 전송\r\n                location: formData.location,\r\n            })})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Array.isArray(data)) {\r\n                    setGameData(data); // 배열이면 그대로 상태에 저장\r\n                } else {\r\n                    setGameData([]); // 배열이 아니면 빈 배열로 설정\r\n                }// 서버에서 받은 경기 데이터 저장\r\n            })\r\n            .catch((err) => console.error(\"Failed to fetch game data:\", err));\r\n    }, [selectedDate, team.teamId]);\r\n\r\n    // 날짜가 선택되었을 때 해당 날짜의 경기 정보를 필터링하여 저장\r\n    useEffect(() => {\r\n        const selectedDateString = selectedDate.toISOString().split(\"T\")[0]; // 선택된 날짜의 yyyy-mm-dd 형식\r\n        const gamesOnSelectedDate = gameData.filter((game) => {\r\n            return game.gameDate === selectedDateString; // 경기가 선택된 날짜와 일치하는지 확인\r\n        });\r\n        setGamesForSelectedDate(gamesOnSelectedDate);\r\n    }, [selectedDate, gameData]);\r\n\r\n    return (\r\n        <div className={styles.default}>\r\n            <div className={styles.cropping}\r\n                 style={{backgroundColor: backgroundColor}}></div>\r\n                <div className={styles.inner}>\r\n                    <div className={styles.title}>{team.sponsor} 경기 일정</div>\r\n\r\n                    <div className={styles.calendarContainer}>\r\n                        <Calendar\r\n                            onChange={setSelectedDate} // 날짜 선택 핸들러\r\n                            value={selectedDate} // 현재 선택된 날짜\r\n                        />\r\n                    </div>\r\n\r\n                    <div className={styles.gameList}>\r\n                        <h3>{selectedDate.toLocaleDateString()} 경기를 확인하세요:</h3>\r\n                        {gamesForSelectedDate.length > 0 ? (\r\n                            <ul>\r\n                                {gamesForSelectedDate.map((game) => (\r\n                                    <li key={game.gameId}>\r\n                                        {game.homeTeam.teamName} vs {game.awayTeam.teamName} - {game.gameDate}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : (\r\n                            <p>이번 날짜에는 경기가 없습니다.</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n            );\r\n            }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}