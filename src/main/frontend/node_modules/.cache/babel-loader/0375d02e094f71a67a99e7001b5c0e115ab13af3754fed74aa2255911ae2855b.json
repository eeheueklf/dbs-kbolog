{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\dbs-kbolog\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Players\\\\Players.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Players.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/_Layout/Footer\";\nimport HeaderImg from \"../../image/playerHeader.jpg\";\nimport PlayerTable from \"../../components/_Table/_PTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Players() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [view, setView] = useState(\"pitcher\");\n  useEffect(() => {\n    fetch(`/api/player`).then(res => res.json()).then(data => {\n      setPlayers(data);\n      console.log(data);\n    }).catch(err => {\n      console.error(\"API fetch error:\", err);\n    });\n  }, []);\n  const [toolbarStatus, setToolbarStatus] = useState(false); // 초기 상태는 OFF\n\n  const toggleToobarStatus = () => {\n    setToolbarStatus(!toolbarStatus);\n    if (view === \"hitter\") setView(\"pitcher\");else setView(\"hitter\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.default,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cropping,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.headerImg,\n        src: HeaderImg,\n        alt: \"Header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"\\uC120\\uC218 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.checkboxSwitch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: toolbarStatus // 상태에 맞게 체크박스 상태 결정\n          ,\n          onChange: toggleToobarStatus // 체크박스를 클릭할 때 상태 변경\n          ,\n          value: \"1\",\n          name: \"status\",\n          className: styles.inputCheckbox,\n          id: styles.toolbarActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.checkboxAnimate,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.checkboxOff,\n            children: \"\\uD22C\\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.checkboxOn,\n            children: \"\\uD0C0\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerTable, {\n        pId: 0,\n        pPosition: view === \"pitcher\" ? 1 : 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), players.map(data => {\n        if (data.playerType === \"Hitter\") {\n          return /*#__PURE__*/_jsxDEV(PlayerTable, {\n            pId: data.playerId,\n            pName: data.playerName,\n            pPosition: data.playerPosition,\n            pTeam: data.teamName,\n            pSponsor: data.teamSponsor,\n            avg: data.avg,\n            ops: data.ops,\n            war: data.war\n          }, data.playerId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(PlayerTable, {\n            pId: data.playerId,\n            pName: data.playerName,\n            pPosition: data.playerPosition,\n            pTeam: data.teamName,\n            pSponsor: data.teamSponsor,\n            era: data.era,\n            ip: data.ip,\n            whip: data.whip\n          }, data.playerId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Players, \"Gxcd49Pf47pTxrjjNWMlbkK+szY=\");\n_c = Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["styles","React","useEffect","useState","Footer","HeaderImg","PlayerTable","jsxDEV","_jsxDEV","Players","_s","players","setPlayers","view","setView","fetch","then","res","json","data","console","log","catch","err","error","toolbarStatus","setToolbarStatus","toggleToobarStatus","className","default","children","cropping","headerImg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","inner","title","checkboxSwitch","type","checked","onChange","value","name","inputCheckbox","id","toolbarActive","checkboxAnimate","checkboxOff","checkboxOn","pId","pPosition","map","playerType","playerId","pName","playerName","playerPosition","pTeam","teamName","pSponsor","teamSponsor","avg","ops","war","era","ip","whip","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/dbs-kbolog/src/main/frontend/src/page/Players/Players.js"],"sourcesContent":["import styles from \"./Players.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../components/_Layout/Footer\";\r\nimport HeaderImg from \"../../image/playerHeader.jpg\";\r\nimport PlayerTable from \"../../components/_Table/_PTable\";\r\n\r\nexport default function Players() {\r\n    const [players, setPlayers] = useState([]);\r\n    const [view, setView] = useState(\"pitcher\");\r\n\r\n    useEffect(() => {\r\n        fetch(`/api/player`)\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                setPlayers(data);\r\n                console.log(data)\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API fetch error:\", err);\r\n            });\r\n    }, []);\r\n\r\n    const [toolbarStatus, setToolbarStatus] = useState(false);  // 초기 상태는 OFF\r\n\r\n    const toggleToobarStatus = () => {\r\n        setToolbarStatus(!toolbarStatus);\r\n        if(view===\"hitter\") setView(\"pitcher\")\r\n        else setView(\"hitter\")\r\n    };\r\n    return (\r\n        <div className={styles.default}>\r\n            <div className={styles.cropping}>\r\n                <img className={styles.headerImg} src={HeaderImg} alt=\"Header\" />\r\n            </div>\r\n            <div className={styles.inner}>\r\n                <div className={styles.title}>선수 목록</div>\r\n                <br/>\r\n                <div className={styles.checkboxSwitch}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={toolbarStatus}  // 상태에 맞게 체크박스 상태 결정\r\n                        onChange={toggleToobarStatus}  // 체크박스를 클릭할 때 상태 변경\r\n                        value=\"1\"\r\n                        name=\"status\"\r\n                        className={styles.inputCheckbox}\r\n                        id={styles.toolbarActive}\r\n                    />\r\n                    <div className={styles.checkboxAnimate}>\r\n                        <span className={styles.checkboxOff}>투수</span>\r\n                        <span className={styles.checkboxOn}>타자</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/>\r\n\r\n                <PlayerTable pId={0} pPosition={view === \"pitcher\" ? 1 : 0}/>\r\n                {players.map(data => {\r\n                    if (data.playerType === \"Hitter\") {\r\n                        return (\r\n                            <PlayerTable\r\n                                key={data.playerId}\r\n                                pId={data.playerId}\r\n                                pName={data.playerName}\r\n                                pPosition={data.playerPosition}\r\n                                pTeam={data.teamName}\r\n                                pSponsor={data.teamSponsor}\r\n                                avg={data.avg}\r\n                                ops={data.ops}\r\n                                war={data.war}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <PlayerTable\r\n                                key={data.playerId}\r\n                                pId={data.playerId}\r\n                                pName={data.playerName}\r\n                                pPosition={data.playerPosition}\r\n                                pTeam={data.teamName}\r\n                                pSponsor={data.teamSponsor}\r\n                                era={data.era}\r\n                                ip={data.ip}\r\n                                whip={data.whip}\r\n                            />\r\n                        );\r\n                    }\r\n                })}\r\n\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}