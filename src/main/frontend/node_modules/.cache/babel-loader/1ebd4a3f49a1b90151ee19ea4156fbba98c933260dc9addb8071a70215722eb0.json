{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eeheu\\\\Documents\\\\15.Lab\\\\10.react\\\\dbs-kbolog\\\\src\\\\main\\\\frontend\\\\src\\\\page\\\\Player\\\\Playerpage.js\",\n  _s = $RefreshSig$();\nimport styles from \"./Playerpage.module.css\";\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../components/_Layout/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Playerpage() {\n  _s();\n  const [team, setTeam] = useState([]);\n  const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\n  const [gameData, setGameData] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]);\n  const formatDate = date => {\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  };\n  useEffect(() => {\n    fetch(\"/api/my\").then(res => res.json()).then(res => {\n      setTeam(res.rootTeam);\n    }).catch(err => {\n      console.error(\"API fetch error:\", err); // 에러 처리\n    });\n    switch (team.sponsor) {\n      case \"기아\":\n        setBackgroundColor(\"#F73600\"); // 기아의 배경색\n        break;\n      case \"두산\":\n        setBackgroundColor(\"#131230\"); // 두산의 배경색\n        break;\n      case \"삼성\":\n        setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\n        break;\n      default:\n        setBackgroundColor(\"#f0f0f0\");\n      // 기본 배경색\n    }\n  }, [team.sponsor]);\n  useEffect(() => {\n    const selectedDate = new Date();\n    const year = selectedDate.getFullYear();\n    const month = selectedDate.getMonth();\n    const startOfMonth = formatDate(new Date(year, month, 1));\n    const endOfMonth = formatDate(new Date(year, month + 1, 0));\n    fetch(`/api/game/team`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        teamId: team.teamId,\n        start: startOfMonth,\n        end: endOfMonth\n      })\n    }).then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setGameData(data);\n      } else {\n        setGameData([]);\n      }\n    }).catch(err => console.error(\"Failed to fetch game data:\", err));\n  }, [selectedDate, team.teamId]);\n  const gamesByDate = gameData.reduce((acc, game) => {\n    const gameDate = formatDate(game.gameDate); // Assuming the game date is in `game.date`\n    if (!acc[gameDate]) acc[gameDate] = [];\n    acc[gameDate].push(game);\n    return acc;\n  }, {});\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    const formattedDate = formatDate(date);\n    const gamesOnDate = gamesByDate[formattedDate];\n    return gamesOnDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gameInfo,\n      children: gamesOnDate.map((game, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.game,\n          children: [game.awayTeam.sponsor, \" vs \", game.homeTeam.sponsor]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this) : null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.default,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cropping,\n      style: {\n        backgroundColor: backgroundColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: [team.teamName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), \"\\uACBD\\uAE30 \\uC77C\\uC815\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.calendarContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Playerpage, \"dRcLU+0RG5LRBO/ScOAp3MlwIFA=\");\n_c = Playerpage;\nvar _c;\n$RefreshReg$(_c, \"Playerpage\");","map":{"version":3,"names":["styles","React","useEffect","useState","Footer","jsxDEV","_jsxDEV","Playerpage","_s","team","setTeam","backgroundColor","setBackgroundColor","gameData","setGameData","selectedDate","setSelectedDate","Date","gamesForSelectedDate","setGamesForSelectedDate","formatDate","date","d","year","getFullYear","month","String","getMonth","padStart","day","getDate","fetch","then","res","json","rootTeam","catch","err","console","error","sponsor","startOfMonth","endOfMonth","method","headers","body","JSON","stringify","teamId","start","end","data","Array","isArray","gamesByDate","reduce","acc","game","gameDate","push","tileContent","view","formattedDate","gamesOnDate","className","gameInfo","children","map","index","awayTeam","homeTeam","fileName","_jsxFileName","lineNumber","columnNumber","default","cropping","style","inner","title","teamName","calendarContainer","_c","$RefreshReg$"],"sources":["C:/Users/eeheu/Documents/15.Lab/10.react/dbs-kbolog/src/main/frontend/src/page/Player/Playerpage.js"],"sourcesContent":["import styles from \"./Playerpage.module.css\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Footer from \"../../components/_Layout/Footer\";\r\n\r\n\r\nexport default function Playerpage() {\r\n    const [team, setTeam] = useState([]);\r\n    const [backgroundColor, setBackgroundColor] = useState(\"#f0f0f0\");\r\n    const [gameData, setGameData] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [gamesForSelectedDate, setGamesForSelectedDate] = useState([]);\r\n\r\n    const formatDate = (date) => {\r\n        const d = new Date(date);\r\n        const year = d.getFullYear();\r\n        const month = String(d.getMonth() + 1).padStart(2, '0');\r\n        const day = String(d.getDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"/api/my\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setTeam(res.rootTeam)\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API fetch error:\", err); // 에러 처리\r\n            });\r\n\r\n        switch (team.sponsor) {\r\n            case \"기아\":\r\n                setBackgroundColor(\"#F73600\"); // 기아의 배경색\r\n                break;\r\n            case \"두산\":\r\n                setBackgroundColor(\"#131230\"); // 두산의 배경색\r\n                break;\r\n            case \"삼성\":\r\n                setBackgroundColor(\"#074CA1\"); // 삼성의 배경색\r\n                break;\r\n            default:\r\n                setBackgroundColor(\"#f0f0f0\"); // 기본 배경색\r\n        }\r\n    }, [team.sponsor]);\r\n\r\n    useEffect(() => {\r\n        const selectedDate = new Date();\r\n        const year = selectedDate.getFullYear();\r\n        const month = selectedDate.getMonth();\r\n        const startOfMonth = formatDate(new Date(year, month, 1));\r\n        const endOfMonth = formatDate(new Date(year, month + 1, 0));\r\n        fetch(`/api/game/team`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                teamId: team.teamId,\r\n                start: startOfMonth,\r\n                end: endOfMonth,\r\n            })})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if (Array.isArray(data)) {\r\n                    setGameData(data);\r\n                } else {\r\n                    setGameData([]);\r\n                }\r\n            })\r\n            .catch((err) => console.error(\"Failed to fetch game data:\", err));\r\n    }, [selectedDate, team.teamId]);\r\n\r\n    const gamesByDate = gameData.reduce((acc, game) => {\r\n        const gameDate = formatDate(game.gameDate); // Assuming the game date is in `game.date`\r\n        if (!acc[gameDate]) acc[gameDate] = [];\r\n        acc[gameDate].push(game);\r\n        return acc;\r\n    }, {});\r\n\r\n    const tileContent = ({ date, view }) => {\r\n        const formattedDate = formatDate(date);\r\n        const gamesOnDate = gamesByDate[formattedDate];\r\n\r\n        return gamesOnDate ? (\r\n            <div className={styles.gameInfo}>\r\n                {gamesOnDate.map((game, index) => {\r\n                    return (\r\n                        <div key={index} className={styles.game}>\r\n                            {game.awayTeam.sponsor} vs {game.homeTeam.sponsor}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        ) : null;\r\n    };\r\n\r\n    return (\r\n        <div className={styles.default}>\r\n            <div className={styles.cropping}\r\n                 style={{backgroundColor: backgroundColor}}></div>\r\n                <div className={styles.inner}>\r\n                    <div className={styles.title}>{team.teamName} </div>\r\n                    <br/>경기 일정<br/><br/>\r\n                    <div className={styles.calendarContainer}>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n            );\r\n            }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}